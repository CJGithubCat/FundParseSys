package com.zsh.labouCapital.dao.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class THoldFundSummaryCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    protected Integer limit;

    protected Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public THoldFundSummaryCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return this.limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return this.offset;
    }

    public BoundBuilder boundBuilder() {
        return new BoundBuilder();
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsIsNull() {
            addCriterion("total_assets is null");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsIsNotNull() {
            addCriterion("total_assets is not null");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsEqualTo(Double value) {
            addCriterion("total_assets =", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsNotEqualTo(Double value) {
            addCriterion("total_assets <>", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsGreaterThan(Double value) {
            addCriterion("total_assets >", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsGreaterThanOrEqualTo(Double value) {
            addCriterion("total_assets >=", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsLessThan(Double value) {
            addCriterion("total_assets <", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsLessThanOrEqualTo(Double value) {
            addCriterion("total_assets <=", value, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsIn(List<Double> values) {
            addCriterion("total_assets in", values, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsNotIn(List<Double> values) {
            addCriterion("total_assets not in", values, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsBetween(Double value1, Double value2) {
            addCriterion("total_assets between", value1, value2, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andTotalAssetsNotBetween(Double value1, Double value2) {
            addCriterion("total_assets not between", value1, value2, "totalAssets");
            return (Criteria) this;
        }

        public Criteria andDailyGainIsNull() {
            addCriterion("daily_gain is null");
            return (Criteria) this;
        }

        public Criteria andDailyGainIsNotNull() {
            addCriterion("daily_gain is not null");
            return (Criteria) this;
        }

        public Criteria andDailyGainEqualTo(Double value) {
            addCriterion("daily_gain =", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainNotEqualTo(Double value) {
            addCriterion("daily_gain <>", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainGreaterThan(Double value) {
            addCriterion("daily_gain >", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainGreaterThanOrEqualTo(Double value) {
            addCriterion("daily_gain >=", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainLessThan(Double value) {
            addCriterion("daily_gain <", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainLessThanOrEqualTo(Double value) {
            addCriterion("daily_gain <=", value, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainIn(List<Double> values) {
            addCriterion("daily_gain in", values, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainNotIn(List<Double> values) {
            addCriterion("daily_gain not in", values, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainBetween(Double value1, Double value2) {
            addCriterion("daily_gain between", value1, value2, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andDailyGainNotBetween(Double value1, Double value2) {
            addCriterion("daily_gain not between", value1, value2, "dailyGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainIsNull() {
            addCriterion("total_gain is null");
            return (Criteria) this;
        }

        public Criteria andTotalGainIsNotNull() {
            addCriterion("total_gain is not null");
            return (Criteria) this;
        }

        public Criteria andTotalGainEqualTo(Double value) {
            addCriterion("total_gain =", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainNotEqualTo(Double value) {
            addCriterion("total_gain <>", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainGreaterThan(Double value) {
            addCriterion("total_gain >", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainGreaterThanOrEqualTo(Double value) {
            addCriterion("total_gain >=", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainLessThan(Double value) {
            addCriterion("total_gain <", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainLessThanOrEqualTo(Double value) {
            addCriterion("total_gain <=", value, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainIn(List<Double> values) {
            addCriterion("total_gain in", values, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainNotIn(List<Double> values) {
            addCriterion("total_gain not in", values, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainBetween(Double value1, Double value2) {
            addCriterion("total_gain between", value1, value2, "totalGain");
            return (Criteria) this;
        }

        public Criteria andTotalGainNotBetween(Double value1, Double value2) {
            addCriterion("total_gain not between", value1, value2, "totalGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainIsNull() {
            addCriterion("hold_gain is null");
            return (Criteria) this;
        }

        public Criteria andHoldGainIsNotNull() {
            addCriterion("hold_gain is not null");
            return (Criteria) this;
        }

        public Criteria andHoldGainEqualTo(Double value) {
            addCriterion("hold_gain =", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainNotEqualTo(Double value) {
            addCriterion("hold_gain <>", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainGreaterThan(Double value) {
            addCriterion("hold_gain >", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainGreaterThanOrEqualTo(Double value) {
            addCriterion("hold_gain >=", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainLessThan(Double value) {
            addCriterion("hold_gain <", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainLessThanOrEqualTo(Double value) {
            addCriterion("hold_gain <=", value, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainIn(List<Double> values) {
            addCriterion("hold_gain in", values, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainNotIn(List<Double> values) {
            addCriterion("hold_gain not in", values, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainBetween(Double value1, Double value2) {
            addCriterion("hold_gain between", value1, value2, "holdGain");
            return (Criteria) this;
        }

        public Criteria andHoldGainNotBetween(Double value1, Double value2) {
            addCriterion("hold_gain not between", value1, value2, "holdGain");
            return (Criteria) this;
        }

        public Criteria andTsIsNull() {
            addCriterion("ts is null");
            return (Criteria) this;
        }

        public Criteria andTsIsNotNull() {
            addCriterion("ts is not null");
            return (Criteria) this;
        }

        public Criteria andTsEqualTo(Date value) {
            addCriterion("ts =", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotEqualTo(Date value) {
            addCriterion("ts <>", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThan(Date value) {
            addCriterion("ts >", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsGreaterThanOrEqualTo(Date value) {
            addCriterion("ts >=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThan(Date value) {
            addCriterion("ts <", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsLessThanOrEqualTo(Date value) {
            addCriterion("ts <=", value, "ts");
            return (Criteria) this;
        }

        public Criteria andTsIn(List<Date> values) {
            addCriterion("ts in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotIn(List<Date> values) {
            addCriterion("ts not in", values, "ts");
            return (Criteria) this;
        }

        public Criteria andTsBetween(Date value1, Date value2) {
            addCriterion("ts between", value1, value2, "ts");
            return (Criteria) this;
        }

        public Criteria andTsNotBetween(Date value1, Date value2) {
            addCriterion("ts not between", value1, value2, "ts");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumIsNull() {
            addCriterion("total_fund_num is null");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumIsNotNull() {
            addCriterion("total_fund_num is not null");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumEqualTo(Integer value) {
            addCriterion("total_fund_num =", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumNotEqualTo(Integer value) {
            addCriterion("total_fund_num <>", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumGreaterThan(Integer value) {
            addCriterion("total_fund_num >", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_fund_num >=", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumLessThan(Integer value) {
            addCriterion("total_fund_num <", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumLessThanOrEqualTo(Integer value) {
            addCriterion("total_fund_num <=", value, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumIn(List<Integer> values) {
            addCriterion("total_fund_num in", values, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumNotIn(List<Integer> values) {
            addCriterion("total_fund_num not in", values, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumBetween(Integer value1, Integer value2) {
            addCriterion("total_fund_num between", value1, value2, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andTotalFundNumNotBetween(Integer value1, Integer value2) {
            addCriterion("total_fund_num not between", value1, value2, "totalFundNum");
            return (Criteria) this;
        }

        public Criteria andDateCreateIsNull() {
            addCriterion("date_create is null");
            return (Criteria) this;
        }

        public Criteria andDateCreateIsNotNull() {
            addCriterion("date_create is not null");
            return (Criteria) this;
        }

        public Criteria andDateCreateEqualTo(Date value) {
            addCriterion("date_create =", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateNotEqualTo(Date value) {
            addCriterion("date_create <>", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateGreaterThan(Date value) {
            addCriterion("date_create >", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("date_create >=", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateLessThan(Date value) {
            addCriterion("date_create <", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateLessThanOrEqualTo(Date value) {
            addCriterion("date_create <=", value, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateIn(List<Date> values) {
            addCriterion("date_create in", values, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateNotIn(List<Date> values) {
            addCriterion("date_create not in", values, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateBetween(Date value1, Date value2) {
            addCriterion("date_create between", value1, value2, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateCreateNotBetween(Date value1, Date value2) {
            addCriterion("date_create not between", value1, value2, "dateCreate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateIsNull() {
            addCriterion("date_update is null");
            return (Criteria) this;
        }

        public Criteria andDateUpdateIsNotNull() {
            addCriterion("date_update is not null");
            return (Criteria) this;
        }

        public Criteria andDateUpdateEqualTo(Date value) {
            addCriterion("date_update =", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateNotEqualTo(Date value) {
            addCriterion("date_update <>", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateGreaterThan(Date value) {
            addCriterion("date_update >", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("date_update >=", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateLessThan(Date value) {
            addCriterion("date_update <", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateLessThanOrEqualTo(Date value) {
            addCriterion("date_update <=", value, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateIn(List<Date> values) {
            addCriterion("date_update in", values, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateNotIn(List<Date> values) {
            addCriterion("date_update not in", values, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateBetween(Date value1, Date value2) {
            addCriterion("date_update between", value1, value2, "dateUpdate");
            return (Criteria) this;
        }

        public Criteria andDateUpdateNotBetween(Date value1, Date value2) {
            addCriterion("date_update not between", value1, value2, "dateUpdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated do_not_delete_during_merge Fri Oct 11 17:37:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_summary
     *
     * @mbggenerated Fri Oct 11 17:37:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public class BoundBuilder {
        protected Integer limit;

        protected Integer offset;

        public Integer limit() {
            return this.limit;
        }

        public BoundBuilder limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        public Integer offset() {
            return this.offset;
        }

        public BoundBuilder offset(Integer offset) {
            this.offset = offset;
            return this;
        }

        public THoldFundSummaryCriteria build() {
            THoldFundSummaryCriteria.this.limit = limit;
            THoldFundSummaryCriteria.this.offset = offset;
            return THoldFundSummaryCriteria.this;
        }
    }
}