package com.zsh.labouCapital.dao.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class THoldFundCopyCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    protected List<Criteria> oredCriteria;

    protected Integer limit;

    protected Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public THoldFundCopyCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return this.limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return this.offset;
    }

    public BoundBuilder boundBuilder() {
        return new BoundBuilder();
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFundCodeIsNull() {
            addCriterion("fund_code is null");
            return (Criteria) this;
        }

        public Criteria andFundCodeIsNotNull() {
            addCriterion("fund_code is not null");
            return (Criteria) this;
        }

        public Criteria andFundCodeEqualTo(String value) {
            addCriterion("fund_code =", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeNotEqualTo(String value) {
            addCriterion("fund_code <>", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeGreaterThan(String value) {
            addCriterion("fund_code >", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeGreaterThanOrEqualTo(String value) {
            addCriterion("fund_code >=", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeLessThan(String value) {
            addCriterion("fund_code <", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeLessThanOrEqualTo(String value) {
            addCriterion("fund_code <=", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeLike(String value) {
            addCriterion("fund_code like", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeNotLike(String value) {
            addCriterion("fund_code not like", value, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeIn(List<String> values) {
            addCriterion("fund_code in", values, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeNotIn(List<String> values) {
            addCriterion("fund_code not in", values, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeBetween(String value1, String value2) {
            addCriterion("fund_code between", value1, value2, "fundCode");
            return (Criteria) this;
        }

        public Criteria andFundCodeNotBetween(String value1, String value2) {
            addCriterion("fund_code not between", value1, value2, "fundCode");
            return (Criteria) this;
        }

        public Criteria andNetWorthIsNull() {
            addCriterion("net_worth is null");
            return (Criteria) this;
        }

        public Criteria andNetWorthIsNotNull() {
            addCriterion("net_worth is not null");
            return (Criteria) this;
        }

        public Criteria andNetWorthEqualTo(Double value) {
            addCriterion("net_worth =", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthNotEqualTo(Double value) {
            addCriterion("net_worth <>", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthGreaterThan(Double value) {
            addCriterion("net_worth >", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthGreaterThanOrEqualTo(Double value) {
            addCriterion("net_worth >=", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthLessThan(Double value) {
            addCriterion("net_worth <", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthLessThanOrEqualTo(Double value) {
            addCriterion("net_worth <=", value, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthIn(List<Double> values) {
            addCriterion("net_worth in", values, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthNotIn(List<Double> values) {
            addCriterion("net_worth not in", values, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthBetween(Double value1, Double value2) {
            addCriterion("net_worth between", value1, value2, "netWorth");
            return (Criteria) this;
        }

        public Criteria andNetWorthNotBetween(Double value1, Double value2) {
            addCriterion("net_worth not between", value1, value2, "netWorth");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyIsNull() {
            addCriterion("buy_money is null");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyIsNotNull() {
            addCriterion("buy_money is not null");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyEqualTo(Double value) {
            addCriterion("buy_money =", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyNotEqualTo(Double value) {
            addCriterion("buy_money <>", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyGreaterThan(Double value) {
            addCriterion("buy_money >", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyGreaterThanOrEqualTo(Double value) {
            addCriterion("buy_money >=", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyLessThan(Double value) {
            addCriterion("buy_money <", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyLessThanOrEqualTo(Double value) {
            addCriterion("buy_money <=", value, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyIn(List<Double> values) {
            addCriterion("buy_money in", values, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyNotIn(List<Double> values) {
            addCriterion("buy_money not in", values, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyBetween(Double value1, Double value2) {
            addCriterion("buy_money between", value1, value2, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyMoneyNotBetween(Double value1, Double value2) {
            addCriterion("buy_money not between", value1, value2, "buyMoney");
            return (Criteria) this;
        }

        public Criteria andBuyNumIsNull() {
            addCriterion("buy_num is null");
            return (Criteria) this;
        }

        public Criteria andBuyNumIsNotNull() {
            addCriterion("buy_num is not null");
            return (Criteria) this;
        }

        public Criteria andBuyNumEqualTo(Double value) {
            addCriterion("buy_num =", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumNotEqualTo(Double value) {
            addCriterion("buy_num <>", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumGreaterThan(Double value) {
            addCriterion("buy_num >", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumGreaterThanOrEqualTo(Double value) {
            addCriterion("buy_num >=", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumLessThan(Double value) {
            addCriterion("buy_num <", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumLessThanOrEqualTo(Double value) {
            addCriterion("buy_num <=", value, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumIn(List<Double> values) {
            addCriterion("buy_num in", values, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumNotIn(List<Double> values) {
            addCriterion("buy_num not in", values, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumBetween(Double value1, Double value2) {
            addCriterion("buy_num between", value1, value2, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyNumNotBetween(Double value1, Double value2) {
            addCriterion("buy_num not between", value1, value2, "buyNum");
            return (Criteria) this;
        }

        public Criteria andBuyDateIsNull() {
            addCriterion("buy_date is null");
            return (Criteria) this;
        }

        public Criteria andBuyDateIsNotNull() {
            addCriterion("buy_date is not null");
            return (Criteria) this;
        }

        public Criteria andBuyDateEqualTo(Date value) {
            addCriterion("buy_date =", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateNotEqualTo(Date value) {
            addCriterion("buy_date <>", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateGreaterThan(Date value) {
            addCriterion("buy_date >", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateGreaterThanOrEqualTo(Date value) {
            addCriterion("buy_date >=", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateLessThan(Date value) {
            addCriterion("buy_date <", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateLessThanOrEqualTo(Date value) {
            addCriterion("buy_date <=", value, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateIn(List<Date> values) {
            addCriterion("buy_date in", values, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateNotIn(List<Date> values) {
            addCriterion("buy_date not in", values, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateBetween(Date value1, Date value2) {
            addCriterion("buy_date between", value1, value2, "buyDate");
            return (Criteria) this;
        }

        public Criteria andBuyDateNotBetween(Date value1, Date value2) {
            addCriterion("buy_date not between", value1, value2, "buyDate");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostIsNull() {
            addCriterion("last_avg_cost is null");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostIsNotNull() {
            addCriterion("last_avg_cost is not null");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostEqualTo(Double value) {
            addCriterion("last_avg_cost =", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostNotEqualTo(Double value) {
            addCriterion("last_avg_cost <>", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostGreaterThan(Double value) {
            addCriterion("last_avg_cost >", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostGreaterThanOrEqualTo(Double value) {
            addCriterion("last_avg_cost >=", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostLessThan(Double value) {
            addCriterion("last_avg_cost <", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostLessThanOrEqualTo(Double value) {
            addCriterion("last_avg_cost <=", value, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostIn(List<Double> values) {
            addCriterion("last_avg_cost in", values, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostNotIn(List<Double> values) {
            addCriterion("last_avg_cost not in", values, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostBetween(Double value1, Double value2) {
            addCriterion("last_avg_cost between", value1, value2, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andLastAvgCostNotBetween(Double value1, Double value2) {
            addCriterion("last_avg_cost not between", value1, value2, "lastAvgCost");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthIsNull() {
            addCriterion("real_net_worth is null");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthIsNotNull() {
            addCriterion("real_net_worth is not null");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthEqualTo(Double value) {
            addCriterion("real_net_worth =", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthNotEqualTo(Double value) {
            addCriterion("real_net_worth <>", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthGreaterThan(Double value) {
            addCriterion("real_net_worth >", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthGreaterThanOrEqualTo(Double value) {
            addCriterion("real_net_worth >=", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthLessThan(Double value) {
            addCriterion("real_net_worth <", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthLessThanOrEqualTo(Double value) {
            addCriterion("real_net_worth <=", value, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthIn(List<Double> values) {
            addCriterion("real_net_worth in", values, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthNotIn(List<Double> values) {
            addCriterion("real_net_worth not in", values, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthBetween(Double value1, Double value2) {
            addCriterion("real_net_worth between", value1, value2, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andRealNetWorthNotBetween(Double value1, Double value2) {
            addCriterion("real_net_worth not between", value1, value2, "realNetWorth");
            return (Criteria) this;
        }

        public Criteria andGrowRateIsNull() {
            addCriterion("grow_rate is null");
            return (Criteria) this;
        }

        public Criteria andGrowRateIsNotNull() {
            addCriterion("grow_rate is not null");
            return (Criteria) this;
        }

        public Criteria andGrowRateEqualTo(Double value) {
            addCriterion("grow_rate =", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateNotEqualTo(Double value) {
            addCriterion("grow_rate <>", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateGreaterThan(Double value) {
            addCriterion("grow_rate >", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateGreaterThanOrEqualTo(Double value) {
            addCriterion("grow_rate >=", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateLessThan(Double value) {
            addCriterion("grow_rate <", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateLessThanOrEqualTo(Double value) {
            addCriterion("grow_rate <=", value, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateIn(List<Double> values) {
            addCriterion("grow_rate in", values, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateNotIn(List<Double> values) {
            addCriterion("grow_rate not in", values, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateBetween(Double value1, Double value2) {
            addCriterion("grow_rate between", value1, value2, "growRate");
            return (Criteria) this;
        }

        public Criteria andGrowRateNotBetween(Double value1, Double value2) {
            addCriterion("grow_rate not between", value1, value2, "growRate");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumIsNull() {
            addCriterion("now_total_num is null");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumIsNotNull() {
            addCriterion("now_total_num is not null");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumEqualTo(Double value) {
            addCriterion("now_total_num =", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumNotEqualTo(Double value) {
            addCriterion("now_total_num <>", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumGreaterThan(Double value) {
            addCriterion("now_total_num >", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumGreaterThanOrEqualTo(Double value) {
            addCriterion("now_total_num >=", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumLessThan(Double value) {
            addCriterion("now_total_num <", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumLessThanOrEqualTo(Double value) {
            addCriterion("now_total_num <=", value, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumIn(List<Double> values) {
            addCriterion("now_total_num in", values, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumNotIn(List<Double> values) {
            addCriterion("now_total_num not in", values, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumBetween(Double value1, Double value2) {
            addCriterion("now_total_num between", value1, value2, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowTotalNumNotBetween(Double value1, Double value2) {
            addCriterion("now_total_num not between", value1, value2, "nowTotalNum");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostIsNull() {
            addCriterion("now_avg_cost is null");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostIsNotNull() {
            addCriterion("now_avg_cost is not null");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostEqualTo(Double value) {
            addCriterion("now_avg_cost =", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostNotEqualTo(Double value) {
            addCriterion("now_avg_cost <>", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostGreaterThan(Double value) {
            addCriterion("now_avg_cost >", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostGreaterThanOrEqualTo(Double value) {
            addCriterion("now_avg_cost >=", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostLessThan(Double value) {
            addCriterion("now_avg_cost <", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostLessThanOrEqualTo(Double value) {
            addCriterion("now_avg_cost <=", value, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostIn(List<Double> values) {
            addCriterion("now_avg_cost in", values, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostNotIn(List<Double> values) {
            addCriterion("now_avg_cost not in", values, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostBetween(Double value1, Double value2) {
            addCriterion("now_avg_cost between", value1, value2, "nowAvgCost");
            return (Criteria) this;
        }

        public Criteria andNowAvgCostNotBetween(Double value1, Double value2) {
            addCriterion("now_avg_cost not between", value1, value2, "nowAvgCost");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 27 15:39:41 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hold_fund_copy
     *
     * @mbggenerated Fri Sep 27 15:39:41 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public class BoundBuilder {
        protected Integer limit;

        protected Integer offset;

        public Integer limit() {
            return this.limit;
        }

        public BoundBuilder limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        public Integer offset() {
            return this.offset;
        }

        public BoundBuilder offset(Integer offset) {
            this.offset = offset;
            return this;
        }

        public THoldFundCopyCriteria build() {
            THoldFundCopyCriteria.this.limit = limit;
            THoldFundCopyCriteria.this.offset = offset;
            return THoldFundCopyCriteria.this;
        }
    }
}